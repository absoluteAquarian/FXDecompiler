int64_t fcn_1800ed450 (void) {
    int64_t var_79h;
    int64_t var_75h;
    int64_t var_71h;
    int64_t var_69h;
    int64_t var_65h;
    int64_t var_61h;
    int64_t var_5dh;
    int64_t var_59h;
    uintmax_t var_55h;
    uintmax_t var_51h;
    int64_t var_4dh;
    int64_t var_49h;
    int64_t var_45h;
    int64_t var_41h;
    int64_t var_39h;
    int64_t var_31h;
    void * var_29h;
    void * s1;
    int64_t var_15h;
    int64_t var_5h;
    int64_t var_bh;
    int64_t var_13h;
    int64_t var_17h;
    int64_t var_20h;
    var_20h = rbx;
    rbp = rsp - 0x27;
    rax = *(0x180426020);
    rax ^= rsp;
    var_17h = rax;
    edi = edx;
    var_4dh = edx;
    r12 = rcx;
    var_39h = rcx;
    ecx = edx;
    var_31h = r8;
    ecx &= 0x3f;
    eax = 0x78;
    eax -= ecx;
    var_45h = ecx;
    esi = 0x38;
    r14d = 0x67452301;
    esi -= ecx;
    var_69h = r14d;
    r15d = 0xefcdab89;
    r11d = 0x98badcfe;
    var_65h = r15d;
    if (ecx >= 0x38) {
        esi = eax;
    }
    var_79h = r11d;
    edx += 8;
    var_49h = esi;
    r9d = 0;
    edx += esi;
    edx >>= 6;
    ebx = 0x10325476;
    var_75h = ebx;
    r10d = edx;
    var_51h = edx;
    var_61h = r9d;
    eax = rdx - 2;
    var_55h = eax;
    r13d = rdx - 1;
    eax -= eax;
    var_41h = r13d;
    eax += 2;
    r10d -= eax;
    eax = r9d;
    var_5dh = r9d;
    var_59h = r10d;
    if (edx == 0) {
        goto label_0;
    }
    rdx = 0x1803af580;
    do {
        if (eax == r10d) {
            if (ecx < 0x38) {
                if (eax != r13d) {
                    goto label_1;
                }
                ecx = edi;
                eax = edi;
                ecx -= r9d;
                eax <<= 3;
                ebx = ecx;
                r8d = ecx;
                var_29h = eax;
                memcpy (s1, r12, r8);
                r8d = esi;
                rcx += rbx;
                eax = memcpy (s1, 0x1803af580, r8);
                r11d = var_79h;
                ebx = var_75h;
            } else {
                if (eax == var_55h) {
                    eax = edi;
                    eax -= r9d;
                    r8d = eax;
                    ebx = eax;
                    memcpy (var_29h, r12, r8);
                    rcx += rbx;
                    r8d = rsi - 0x38;
                    eax = memcpy (var_29h, 0x1803af580, r8);
                    r11d = var_79h;
                    ebx = var_75h;
                    var_59h = r13d;
                    goto label_1;
                }
                if (eax != r13d) {
                    goto label_1;
                }
                eax = edi;
                eax <<= 3;
                var_29h = eax;
                eax = esi;
                __asm ("movups xmm0, xmmword [rax + rdx - 0x38]");
                __asm ("movups xmm1, xmmword [rax + rdx - 0x28]");
                __asm ("movups xmmword [s1], xmm0");
                __asm ("movups xmm0, xmmword [rax + rdx - 0x18]");
                __asm ("movups xmmword [var_15h], xmm1");
                xmm1 = *((rax + rdx - 8));
                __asm ("movups xmmword [var_5h], xmm0");
                var_bh = xmm1;
            }
            eax = rdi + rdi;
            eax |= 1;
            var_13h = eax;
label_1:
            rsi = &var_29h;
        } else {
            rsi = r12;
        }
        r8d = *((rsi + 4));
        eax = r11d;
        r9d = *((rsi + 8));
        eax &= r15d;
        edx = r15d;
        var_71h = rsi;
        edx = ~edx;
        edx &= ebx;
        edx |= eax;
        eax = r15d;
        edx += 0xd76aa478;
        edx += *(rsi);
        edx += r14d;
        edx = rotate_left32 (edx, 7);
        edx += r15d;
        eax &= edx;
        ecx = edx;
        ecx = ~ecx;
        ecx &= r11d;
        ecx |= eax;
        ecx += 0xe8c7b756;
        ecx += ebx;
        r8d += ecx;
        r8d = rotate_left32 (r8d, 0xc);
        r8d += edx;
        ecx = r8d;
        eax = r8d;
        eax &= edx;
        ecx = ~ecx;
        ecx &= r15d;
        ecx |= eax;
        eax = r8d;
        ecx += 0x242070db;
        ecx += r11d;
        r11d = rdx - 0xa83f051;
        r9d += ecx;
        r9d = rotate_right32 (r9d, 0xf);
        r9d += r8d;
        eax &= r9d;
        r10d = r9d;
        r10d = ~r10d;
        r10d &= edx;
        r10d |= eax;
        eax = r9d;
        r10d += 0xc1bdceee;
        r10d += *((rsi + 0xc));
        r10d += r15d;
        r15d = *((rsi + 0x1c));
        r10d = rotate_right32 (r10d, 0xa);
        r10d += r9d;
        eax &= r10d;
        ecx = r10d;
        ecx = ~ecx;
        ecx &= r8d;
        ecx |= eax;
        eax = r10d;
        ecx += *((rsi + 0x10));
        r11d += ecx;
        r11d = rotate_left32 (r11d, 7);
        r11d += r10d;
        eax &= r11d;
        edx = r11d;
        edx = ~edx;
        edx &= r9d;
        edx |= eax;
        edx += 0x4787c62a;
        edx += *((rsi + 0x14));
        edx += r8d;
        edx = rotate_left32 (edx, 0xc);
        edx += r11d;
        r8d = edx;
        eax = edx;
        r8d = ~r8d;
        eax &= r11d;
        r8d &= r10d;
        r8d |= eax;
        r8d += 0xa8304613;
        r8d += *((rsi + 0x18));
        r8d += r9d;
        r8d = rotate_right32 (r8d, 0xf);
        r8d += edx;
        r12d = *((rsi + 0x28));
        r9d = r10 - 0x2b96aff;
        r14d = *((rsi + 0x30));
        eax = edx;
        r13d = *((rsi + 0x34));
        eax &= r8d;
        ecx = r8d;
        ecx = ~ecx;
        ecx &= r11d;
        ecx |= eax;
        eax = r8d;
        ecx += r15d;
        r9d += ecx;
        r9d = rotate_right32 (r9d, 0xa);
        r9d += r8d;
        eax &= r9d;
        r10d = r9d;
        r10d = ~r10d;
        r10d &= edx;
        r10d |= eax;
        eax = r9d;
        r10d += 0x698098d8;
        r10d += *((rsi + 0x20));
        r10d += r11d;
        r10d = rotate_left32 (r10d, 7);
        r10d += r9d;
        eax &= r10d;
        ecx = r10d;
        ecx = ~ecx;
        ecx &= r8d;
        ecx |= eax;
        r11d = r10 + 0x6b901122;
        ecx += 0x8b44f7af;
        ecx += *((rsi + 0x24));
        edx += ecx;
        edx = rotate_left32 (edx, 0xc);
        edx += r10d;
        edi = edx;
        eax = edx;
        eax &= r10d;
        edi = ~edi;
        edi &= r9d;
        edi |= eax;
        ebx = rdx - 0x2678e6d;
        edi += 0xffff5bb1;
        eax = edx;
        edi += r12d;
        edi += r8d;
        edi = rotate_right32 (edi, 0xf);
        edi += edx;
        eax &= edi;
        ecx = edi;
        ecx = ~ecx;
        ecx &= r10d;
        ecx |= eax;
        eax = edi;
        ecx += 0x895cd7be;
        ecx += *((rsi + 0x2c));
        r9d += ecx;
        r9d = rotate_right32 (r9d, 0xa);
        r9d += edi;
        eax &= r9d;
        ecx = r9d;
        ecx = ~ecx;
        ecx &= edx;
        ecx |= eax;
        eax = r9d;
        ecx += r14d;
        r11d += ecx;
        r11d = rotate_left32 (r11d, 7);
        r11d += r9d;
        eax &= r11d;
        ecx = r11d;
        ecx = ~ecx;
        ecx &= edi;
        ecx |= eax;
        ecx += r13d;
        ebx += ecx;
        ebx = rotate_left32 (ebx, 0xc);
        ebx += r11d;
        r8d = ebx;
        esi = *((rsi + 0x38));
        r10d = rdi - 0x5986bc72;
        r8d = ~r8d;
        eax = ebx;
        eax &= r11d;
        ecx = r8d;
        ecx &= r9d;
        ecx |= eax;
        rax = var_71h;
        ecx += esi;
        r10d += ecx;
        r10d = rotate_right32 (r10d, 0xf);
        edi = *((rax + 0x3c));
        r10d += ebx;
        r8d &= r10d;
        edx = r10d;
        edx = ~edx;
        eax = ebx;
        eax &= r10d;
        ecx = edx;
        ecx &= r11d;
        ecx |= eax;
        eax = ebx;
        ecx += 0x49b40821;
        ecx += edi;
        r9d += ecx;
        rcx = var_71h;
        r9d = rotate_right32 (r9d, 0xa);
        r9d += r10d;
        eax &= r9d;
        edx &= r9d;
        r8d |= eax;
        eax = r10d;
        r8d += 0xf61e2562;
        r8d += *((rcx + 4));
        r11d += r8d;
        r8d = rbx - 0x3fbf4cc0;
        rbx = var_71h;
        r11d = rotate_left32 (r11d, 5);
        r11d += r9d;
        eax &= r11d;
        edx |= eax;
        edx += *((rcx + 0x18));
        ecx = r9d;
        ecx = ~ecx;
        r8d += edx;
        ecx &= r11d;
        r8d = rotate_left32 (r8d, 9);
        r8d += r11d;
        edx = r10 + 0x265e5a51;
        r10d = r9 - 0x16493856;
        eax = r8d;
        eax &= r9d;
        r9d = r11 - 0x29d0efa3;
        ecx |= eax;
        ecx += *((rbx + 0x2c));
        edx += ecx;
        ecx = r11d;
        ecx = ~ecx;
        edx = rotate_left32 (edx, 0xe);
        ecx &= r8d;
        edx += r8d;
        eax = edx;
        eax &= r11d;
        ecx |= eax;
        eax = r8d;
        ecx += *(rbx);
        r10d += ecx;
        ecx = r8d;
        ecx = ~ecx;
        r10d = rotate_right32 (r10d, 0xc);
        ecx &= edx;
        r10d += edx;
        eax &= r10d;
        ecx |= eax;
        ecx += *((rbx + 0x14));
        r9d += ecx;
        ecx = edx;
        r9d = rotate_left32 (r9d, 5);
        ecx = ~ecx;
        r9d += r10d;
        ecx &= r10d;
        r11d = r8 + 0x2441453;
        eax = edx;
        r8d = rdx - 0x275e197f;
        eax &= r9d;
        edx = r10 - 0x182c0438;
        ecx |= eax;
        ecx += r12d;
        r11d += ecx;
        ecx = r10d;
        ecx = ~ecx;
        r11d = rotate_left32 (r11d, 9);
        ecx &= r9d;
        r11d += r9d;
        eax = r11d;
        eax &= r10d;
        r10d = r9 + 0x21e1cde6;
        ecx |= eax;
        ecx += edi;
        r8d += ecx;
        ecx = r9d;
        ecx = ~ecx;
        r8d = rotate_left32 (r8d, 0xe);
        ecx &= r11d;
        r8d += r11d;
        eax = r8d;
        eax &= r9d;
        r9d = r11 - 0x3cc8f82a;
        ecx |= eax;
        eax = r11d;
        ecx += *((rbx + 0x10));
        edx += ecx;
        ecx = r11d;
        ecx = ~ecx;
        edx = rotate_right32 (edx, 0xc);
        ecx &= r8d;
        edx += r8d;
        eax &= edx;
        r11d = edx;
        ecx |= eax;
        r11d = ~r11d;
        ecx += *((rbx + 0x24));
        eax = r8d;
        r10d += ecx;
        ecx = r8d;
        ecx = ~ecx;
        r10d = rotate_left32 (r10d, 5);
        ecx &= edx;
        r10d += edx;
        eax &= r10d;
        r11d &= r10d;
        ecx |= eax;
        ecx += esi;
        r9d += ecx;
        ecx = r10d;
        ecx = ~ecx;
        r9d = rotate_left32 (r9d, 9);
        r9d += r10d;
        ecx &= r9d;
        eax = r9d;
        eax &= edx;
        r11d |= eax;
        r11d += 0xf4d50d87;
        r11d += *((rbx + 0xc));
        r11d += r8d;
        r11d = rotate_left32 (r11d, 0xe);
        r11d += r9d;
        eax = r11d;
        eax &= r10d;
        ecx |= eax;
        eax = r9d;
        ecx += *((rbx + 0x20));
        ebx = rdx + 0x455a14ed;
        ebx += ecx;
        edx = r9d;
        ebx = rotate_right32 (ebx, 0xc);
        edx = ~edx;
        ebx += r11d;
        edx &= r11d;
        eax &= ebx;
        edx |= eax;
        r8d = r9 - 0x3105c08;
        edx += 0xa9e3e905;
        edx += r13d;
        eax = r11d;
        edx += r10d;
        ecx = r11d;
        ecx = ~ecx;
        edx = rotate_left32 (edx, 5);
        ecx &= ebx;
        r10d = rbx - 0x72d5b376;
        edx += ebx;
        r9d = ebx;
        eax &= edx;
        r9d = ~r9d;
        ecx |= eax;
        r9d &= edx;
        rax = var_71h;
        ecx += *((rax + 8));
        r8d += ecx;
        ecx = edx;
        ecx = ~ecx;
        r8d = rotate_left32 (r8d, 9);
        r8d += edx;
        ecx &= r8d;
        eax = r8d;
        eax &= ebx;
        rbx = var_71h;
        r9d |= eax;
        r9d += 0x676f02d9;
        r9d += r15d;
        r9d += r11d;
        r9d = rotate_left32 (r9d, 0xe);
        r9d += r8d;
        eax = r9d;
        eax &= edx;
        ecx |= eax;
        eax = r8d;
        eax ^= r9d;
        ecx += r14d;
        r10d += ecx;
        r10d = rotate_right32 (r10d, 0xc);
        r10d += r9d;
        eax ^= r10d;
        eax += 0xfffa3942;
        eax += *((rbx + 0x14));
        edx += eax;
        eax = r9d;
        eax ^= r10d;
        edx = rotate_left32 (edx, 4);
        edx += r10d;
        eax ^= edx;
        eax += 0x8771f681;
        eax += *((rbx + 0x20));
        r8d += eax;
        r11d = rdx - 0x5b4115bc;
        r8d = rotate_left32 (r8d, 0xb);
        r8d += edx;
        eax = r8d;
        ecx = r8d;
        eax ^= r10d;
        eax ^= edx;
        eax += 0x6d9d6122;
        eax += *((rbx + 0x2c));
        r9d += eax;
        r9d = rotate_left32 (r9d, 0x10);
        r9d += r8d;
        ecx ^= r9d;
        eax = ecx;
        eax ^= edx;
        eax += 0xfde5380c;
        eax += esi;
        r10d += eax;
        eax = r9d;
        r10d = rotate_right32 (r10d, 9);
        r10d += r9d;
        ecx ^= r10d;
        ecx += *((rbx + 4));
        r11d += ecx;
        r11d = rotate_left32 (r11d, 4);
        r11d += r10d;
        eax ^= r10d;
        eax ^= r11d;
        edx = r8 + 0x4bdecfa9;
        eax += *((rbx + 0x10));
        r8d = r9 - 0x944b4a0;
        edx += eax;
        r9d = r10 - 0x41404390;
        edx = rotate_left32 (edx, 0xb);
        edx += r11d;
        eax = edx;
        ecx = edx;
        eax ^= r10d;
        r10d = r11 + 0x289b7ec6;
        eax ^= r11d;
        eax += r15d;
        r8d += eax;
        r8d = rotate_left32 (r8d, 0x10);
        r8d += edx;
        ecx ^= r8d;
        eax = ecx;
        eax ^= r11d;
        r11d = rdx - 0x155ed806;
        eax += r12d;
        r9d += eax;
        eax = r8d;
        r9d = rotate_right32 (r9d, 9);
        r9d += r8d;
        eax ^= r9d;
        ecx ^= r9d;
        ecx += r13d;
        r10d += ecx;
        r10d = rotate_left32 (r10d, 4);
        edx = r9 + 0x4881d05;
        r10d += r9d;
        eax ^= r10d;
        eax += *(rbx);
        r11d += eax;
        r11d = rotate_left32 (r11d, 0xb);
        r11d += r10d;
        eax = r11d;
        ecx = r11d;
        eax ^= r9d;
        r9d = r10 - 0x262b2fc7;
        eax ^= r10d;
        eax += 0xd4ef3085;
        eax += *((rbx + 0xc));
        r8d += eax;
        r8d = rotate_left32 (r8d, 0x10);
        r8d += r11d;
        ecx ^= r8d;
        eax = ecx;
        eax ^= r10d;
        eax += *((rbx + 0x18));
        r10d = r8 + 0x1fa27cf8;
        edx += eax;
        edx = rotate_right32 (edx, 9);
        edx += r8d;
        ecx ^= edx;
        ecx += *((rbx + 0x24));
        r9d += ecx;
        ecx = r8d;
        ecx ^= edx;
        r9d = rotate_left32 (r9d, 4);
        r9d += edx;
        r8d = rdx - 0x3b53a99b;
        ecx ^= r9d;
        ecx += 0xe6db99e5;
        ecx += r14d;
        ecx += r11d;
        ecx = rotate_left32 (ecx, 0xb);
        ecx += r9d;
        eax = ecx;
        eax ^= edx;
        eax ^= r9d;
        eax += edi;
        r10d += eax;
        eax = ecx;
        r10d = rotate_left32 (r10d, 0x10);
        r10d += ecx;
        eax ^= r10d;
        eax ^= r9d;
        eax += *((rbx + 8));
        r8d += eax;
        edx = r9 - 0xbd6ddbc;
        eax = ecx;
        r8d = rotate_right32 (r8d, 9);
        eax = ~eax;
        r9d = rcx + 0x432aff97;
        r8d += r10d;
        ecx = r10 - 0x546bdc59;
        eax |= r8d;
        eax ^= r10d;
        eax += *(rbx);
        edx += eax;
        eax = r10d;
        eax = ~eax;
        edx = rotate_left32 (edx, 6);
        edx += r8d;
        r10d = r8 - 0x36c5fc7;
        eax |= edx;
        eax ^= r8d;
        eax += r15d;
        r9d += eax;
        eax = r8d;
        eax = ~eax;
        r9d = rotate_left32 (r9d, 0xa);
        r9d += edx;
        r8d = rdx + 0x655b59c3;
        eax |= r9d;
        eax ^= edx;
        eax += esi;
        ecx += eax;
        eax = edx;
        eax = ~eax;
        ecx = rotate_left32 (ecx, 0xf);
        ecx += r9d;
        edx = r9 - 0x70f3336e;
        eax |= ecx;
        eax ^= r9d;
        eax += *((rbx + 0x14));
        r10d += eax;
        eax = r9d;
        eax = ~eax;
        r10d = rotate_right32 (r10d, 0xb);
        r10d += ecx;
        r9d = rcx - 0x100b83;
        eax |= r10d;
        eax ^= ecx;
        eax += r14d;
        r8d += eax;
        eax = ecx;
        eax = ~eax;
        r8d = rotate_left32 (r8d, 6);
        r8d += r10d;
        ecx = r10 - 0x7a7ba22f;
        eax |= r8d;
        eax ^= r10d;
        eax += *((rbx + 0xc));
        edx += eax;
        eax = r10d;
        eax = ~eax;
        edx = rotate_left32 (edx, 0xa);
        edx += r8d;
        r10d = r8 + 0x6fa87e4f;
        eax |= edx;
        eax ^= r8d;
        eax += r12d;
        r9d += eax;
        eax = r8d;
        eax = ~eax;
        r9d = rotate_left32 (r9d, 0xf);
        r9d += edx;
        eax |= r9d;
        eax ^= edx;
        eax += *((rbx + 4));
        ecx += eax;
        eax = edx;
        eax = ~eax;
        ecx = rotate_right32 (ecx, 0xb);
        ecx += r9d;
        eax |= ecx;
        eax ^= r9d;
        eax += *((rbx + 0x20));
        r14d = var_69h;
        r10d += eax;
        r12 = var_39h;
        r11d = r9d;
        r11d = ~r11d;
        r10d = rotate_left32 (r10d, 6);
        r10d += ecx;
        eax = ecx;
        eax = ~eax;
        r11d |= r10d;
        r11d ^= ecx;
        edi += 0xfe2ce6e0;
        r11d += edi;
        rdi = var_71h;
        r11d += edx;
        r11d = rotate_left32 (r11d, 0xa);
        r11d += r10d;
        eax |= r11d;
        r8d = r11d;
        eax ^= r10d;
        r8d = ~r8d;
        eax += 0xa3014314;
        eax += *((rbx + 0x18));
        edx = r11 - 0x42c50dcb;
        r9d += eax;
        ebx = rcx + 0x4e0811a1;
        r9d = rotate_left32 (r9d, 0xf);
        eax = r10d;
        eax = ~eax;
        r9d += r11d;
        eax |= r9d;
        eax ^= r11d;
        r11d = var_79h;
        eax += r13d;
        ebx += eax;
        ecx = r9 + 0x2ad7d2bb;
        ebx = rotate_right32 (ebx, 0xb);
        eax = r9d;
        ebx += r9d;
        eax = ~eax;
        r8d |= ebx;
        r8d ^= r9d;
        r9d = var_61h;
        r8d += 0xf7537e82;
        r8d += *((rdi + 0x10));
        r15d = rbx - 0x14792c6f;
        r8d += r10d;
        r8d = rotate_left32 (r8d, 6);
        r8d += ebx;
        eax |= r8d;
        r14d += r8d;
        eax ^= ebx;
        var_69h = r14d;
        eax += *((rdi + 0x2c));
        edx += eax;
        eax = ebx;
        ebx = var_75h;
        eax = ~eax;
        edx = rotate_left32 (edx, 0xa);
        edx += r8d;
        eax |= edx;
        ebx += edx;
        eax ^= r8d;
        var_75h = ebx;
        eax += *((rdi + 8));
        r8d = ~r8d;
        ecx += eax;
        ecx = rotate_left32 (ecx, 0xf);
        ecx += edx;
        r8d |= ecx;
        r11d += ecx;
        r8d ^= edx;
        var_79h = r11d;
        r8d += *((rdi + 0x24));
        r15d += r8d;
        r15d = rotate_right32 (r15d, 0xb);
        r15d += var_65h;
        r15d += ecx;
        r9d += 0x40;
        var_65h = r15d;
        var_61h = r9d;
        eax = var_5dh;
        rdx = 0x1803af580;
        edi = var_4dh;
        eax++;
        esi = var_49h;
        r12 += 0x40;
        ecx = var_45h;
        r10d = var_59h;
        r13d = var_41h;
        var_39h = r12;
        var_5dh = eax;
    } while (eax < var_51h);
    r8 = var_31h;
label_0:
    *(r8) = r14d;
    *((r8 + 4)) = r15d;
    *((r8 + 8)) = r11d;
    *((r8 + 0xc)) = ebx;
    rcx = var_17h;
    rcx ^= rsp;
    fcn_18026e150 ();
    rbx = var_20h;
    return rax;
}
