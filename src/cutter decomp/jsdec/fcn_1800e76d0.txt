uint64_t fcn_1800e76d0 (void) {
    int64_t var_30h;
    int64_t var_38h;
    int64_t var_18h;
    var_18h = rbx;
    eax = *((rcx + 0xc));
    rbx = rcx;
    esi = edx;
    ecx = rax + rsi;
    if (ecx < eax) {
        *((rbx + 0x10)) = 0x8007000e;
        eax = 0;
        rbx = var_18h;
        return eax;
    }
    edx = *((rbx + 8));
    var_30h = rbp;
    var_38h = rdi;
    if (ecx > edx) {
        edi = rdx + rdx;
        if (edi <= ecx) {
            edi = ecx;
        }
        ecx = 0x10;
        if (edi < ecx) {
            edi = ecx;
        }
        if (edi < edx) {
            goto label_0;
        }
        if (edi < eax) {
            goto label_0;
        }
        if (edi >= 0xea0ea0) {
            goto label_0;
        }
        eax = edi;
        rcx = rax * 0x118;
        rax = fcn_18026dd38 ();
        if (rax == 0) {
            goto label_0;
        }
        rdx = *(rbx);
        if (rdx != 0) {
            r8 = rcx * 0x118;
            memcpy (rax, *((rbx + 0xc)), r8);
            rcx = *(rbx);
            fcn_18026dd2c ();
        }
        eax = *((rbx + 0xc));
        *(rbx) = rbp;
        *((rbx + 8)) = edi;
    }
    ecx = eax;
    rax = rcx * 0x118;
    rax += *(rbx);
    if (esi == 0) {
        goto label_1;
    }
    rcx = rax + 0xc8;
    rdx = rsi;
    r10 = 0x180357160;
    r9d = 0;
    do {
        *((rcx - 0xc8)) = r10;
        __asm ("xorps xmm0, xmm0");
        *((rcx + 4)) = r9;
        r8d = 0;
        *((rcx - 8)) = r9;
        *(rcx) = r9d;
        *((rcx + 0x1c)) = r9;
        *((rcx + 0x10)) = r9;
        *((rcx + 0x18)) = r9d;
        *((rcx + 0x34)) = r9;
        *((rcx + 0x28)) = r9;
        *((rcx + 0x30)) = r9d;
        *((rcx + 0x40)) = r9;
        *((rcx + 0x48)) = r9d;
        __asm ("movups xmmword [rcx - 0xb0], xmm0");
        __asm ("movups xmmword [rcx - 0xa0], xmm0");
        __asm ("movups xmmword [rcx - 0x90], xmm0");
        __asm ("movups xmmword [rcx - 0x80], xmm0");
        __asm ("movups xmmword [rcx - 0x70], xmm0");
        __asm ("movups xmmword [rcx - 0x60], xmm0");
        __asm ("movups xmmword [rcx - 0x50], xmm0");
        __asm ("movups xmmword [rcx - 0x40], xmm0");
        __asm ("movups xmmword [rcx - 0x30], xmm0");
        *((rcx - 0x20)) = r8;
        *((rcx - 0x18)) = r9;
        *((rcx - 0x10)) = r9d;
        *((rcx - 0xc0)) = r9;
        rcx = rcx + 0x118;
        rdx--;
    } while (rdx != 0);
    ecx = *((rbx + 0xc));
label_1:
    ecx += esi;
    *((rbx + 0xc)) = ecx;
    do {
        rdi = var_38h;
        rbx = var_18h;
        return rax;
label_0:
        *((rbx + 0x10)) = 0x8007000e;
        eax = 0;
    } while (1);
}
